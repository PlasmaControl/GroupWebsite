[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["plasmacontrolwebsite"]

[project]
name = 'plasmacontrolwebsite'
authors = [{ name = 'Sina Atalay', email = 'dev@atalay.biz' }]
readme = "README.md"
requires-python = '>=3.11'
dependencies = [
    "mkdocs-material==9.6.7",
    "mkdocs-bibtex==4.2.2",
    "mkdocs-caption==1.3.0",
    "mkdocs-rss-plugin==1.17.1",
    "mkdocs-macros-plugin==1.3.7",
    "pydantic[email]==2.10.6",
    "ruamel.yaml==0.18.10",
    "mkdocs-redirects==1.2.2",
    "mkdocs-glightbox==0.4.0"
]
classifiers = ["Intended Audience :: Science/Research"]
version = "0.0.1"

[tool.hatch.envs.default]
installer = "uv"
python = "3.13"
dependencies = ["ruff", "black"]

[tool.hatch.envs.default.scripts]
build = "mkdocs build --clean --strict --site-dir public_html"                                                                                           # hatch run build
serve = "mkdocs serve --strict"                                                                                                   # hatch run serve
format = "black plasmacontrolwebsite && ruff check --fix plasmacontrolwebsite && ruff format plasmacontrolwebsite" # hatch run format
lint = "ruff check"                                                                                                      # hatch run lint
test = "pytest"                                                                                                          # hatch run test
test-and-report = "coverage run -m pytest && coverage combine && coverage report && coverage html --show-contexts"       # hatch run test-and-report

[tool.ruff]
line-length = 88

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "I",   # isort
    "ARG", # flake8-unused-arguments
    "C4",  # flake8-comprehensions
    "EM",  # flake8-errmsg
    "ICN", # flake8-import-conventions
    "ISC", # flake8-implicit-str-concat
    "G",   # flake8-logging-format
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "RET", # flake8-return
    "RUF", # Ruff-specific
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "UP",  # pyupgrade
    "YTT", # flake8-2020
    "EXE", # flake8-executable
    "NPY", # NumPy specific rules
    "PD",  # pandas-vet
]
ignore = [
    "ISC001", # Conflicts with formatter
]
flake8-unused-arguments.ignore-variadic-names = true

[tool.black]
line-length = 88 # maximum line length
preview = true # to allow enable-unstable-feature
enable-unstable-feature = [
    "string_processing",
] # to break strings into multiple lines

